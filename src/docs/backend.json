{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the Bol√£o Alviverde application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "name": {
          "type": "string",
          "description": "The full name of the user."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "teamName": {
          "type": "string",
          "description": "The name of the team chosen by the user."
        },
        "totalScore": {
          "type": "number",
          "description": "The total score of the user."
        },
        "isAdmin": {
          "type": "boolean",
          "description": "Indicates if the user is an administrator."
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "teamName",
        "totalScore",
        "isAdmin"
      ]
    },
    "Match": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Match",
      "type": "object",
      "description": "Represents a Palmeiras match.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the match."
        },
        "matchDateTime": {
          "type": "string",
          "description": "Date and time of the match.",
          "format": "date-time"
        },
        "homeTeam": {
          "type": "string",
          "description": "The home team for the match (assumed to be Palmeiras)."
        },
        "awayTeam": {
          "type": "string",
          "description": "The away team for the match."
        },
        "homeTeamScore": {
          "type": "number",
          "description": "The score of the home team."
        },
        "awayTeamScore": {
          "type": "number",
          "description": "The score of the away team."
        }
      },
      "required": [
        "id",
        "matchDateTime",
        "homeTeam",
        "awayTeam"
      ]
    },
    "Guess": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Guess",
      "type": "object",
      "description": "Represents a user's guess for a match.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the guess."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Guess)"
        },
        "matchId": {
          "type": "string",
          "description": "Reference to Match. (Relationship: Match 1:N Guess)"
        },
        "homeTeamGuess": {
          "type": "number",
          "description": "The user's predicted score for the home team."
        },
        "awayTeamGuess": {
          "type": "number",
          "description": "The user's predicted score for the away team."
        },
        "pointsAwarded": {
          "type": "number",
          "description": "Points awarded for this guess."
        }
      },
      "required": [
        "id",
        "userId",
        "matchId",
        "homeTeamGuess",
        "awayTeamGuess"
      ]
    },
    "RankingProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "RankingProfile",
      "type": "object",
      "description": "A public-facing profile for a user, containing only data for the ranking.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user, same as in the 'users' collection."
        },
        "name": {
          "type": "string",
          "description": "The full name of the user."
        },
        "teamName": {
          "type": "string",
          "description": "The name of the team chosen by the user."
        },
        "totalScore": {
          "type": "number",
          "description": "The total (general) score of the user."
        },
        "monthlyScore": {
          "type": "number",
          "description": "The calculated score for the current month."
        },
        "roundScore": {
          "type": "number",
          "description": "The calculated score for the current round."
        }
      },
      "required": [
        "id",
        "name",
        "teamName",
        "totalScore",
        "monthlyScore",
        "roundScore"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/entities/User"
          },
          "description": "Stores private user profiles. Only the user or an admin can read/write their profile.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/ranking/{userId}",
        "definition": {
          "entityName": "RankingProfile",
          "schema": {
            "$ref": "#/entities/RankingProfile"
          },
          "description": "Stores public, denormalized data for the leaderboard. Can be read by any user, but only written by backend processes or admins.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/matches/{matchId}",
        "definition": {
          "entityName": "Match",
          "schema": {
            "$ref": "#/entities/Match"
          },
          "description": "Stores match details. Admin-only write; all users can read.",
          "params": [
            {
              "name": "matchId",
              "description": "The unique identifier for the match."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/guesses/{guessId}",
        "definition": {
          "entityName": "Guess",
          "schema": {
            "$ref": "#/entities/Guess"
          },
          "description": "Stores user guesses for each match. Path-based ownership: only the user can manage their own guesses.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "guessId",
              "description": "The unique identifier for the guess."
            }
          ]
        }
      },
      {
        "path": "/roles_admin/{userId}",
        "definition": {
          "entityName": "role_admin",
          "schema": {
            "$ref": "#/entities/User"
          },
          "description": "Indicates admin role. Existence of document grants admin privileges.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure now includes a denormalized 'ranking' collection. 1. `/users/{userId}` remains for private user data, accessible only by the user owner or an admin. 2. `/ranking/{userId}` is a new public collection containing only the necessary data for the leaderboard (name, teamName, scores). This collection can be read by all authenticated users, solving the permission issues, while write access is restricted. 3. Data is duplicated from `users` to `ranking` upon user creation or modification to ensure consistency. 4. Other collections (`matches`, `guesses`, `roles_admin`) remain unchanged."
  }
}
